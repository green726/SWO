#legal options for delimeters are parentheses (), brackets {}, and square brackets [] - more will be added in the future

[general]
typo.enabled  = true

[function.declaration]
marker.value = "@" #could also be something like "func"
marker.word = false #set to true if you want to use a percursor word such as func
args.delimeters = ["(", ")"]
args.seperator = ","
body.delimeters = ["{", "}"]
reorder = true


[function.calling]
args.delimeters = ["(", ")"]
args.seperator = ","
builtin.marker.enabled = true #if builtin marker is disabled compiler performance will degrade significantly - disabling this is not currently supported
builtin.marker.value = "!"
builtin.marker.location = "end" #can also be set to "beginning"

[loop.for]
declaration.delimeters = ["(", ")"]
body.delimeters = ["{", "}"]

[if]
declaration.delimeters = ["(", ")"] #can be set to a blank string to not use if declaration delims - degrades compiler performance
body.delimeters = ["{", "}"] #could also be ["then", "endif"]

[variable]
declaration.keyword.constant = "const"
declaration.keyword.mutable = "var"
declaration.order = ["keyword", "type", "name", "assignment", "value"] #currently not customizable but will be in the future
declaration.reorder = true #same thing as function declaration reording - will compile variables through their references - if a variable is reference and declared below that, it will still compile and run - degrades compiler performance
